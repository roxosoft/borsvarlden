@using borsvarlden.ViewModels;
@using borsvarlden.Helpers;
@model PaggingResponseViewModel<NewsViewModel>;
@{
    ViewData["Title"] = "Artiklar";
}

@section Styles{
    <link rel="stylesheet" href="~/css/article.css" />
    <link rel="stylesheet" href="~/css/news-list.css" />
}

<div class="row index-row">
    <div class="col-10 index-content-wrapper">
        <div class="banner-wrapper">
            <img src="~/assets/images/savr-panorama.jpg">
        </div>
        <div class="row">
            <div class="col-8 content-main">
                <div class="index-article-feed">
                    @foreach (var news in Model.Data)
                    {
                        <div class="small-block article">
                            @await Html.PartialAsync("_Article", news)
                        </div>
                    }

                    <div class="pager">
                        @if (Model.CurrentPage > 3)
                        {
                            <a class="page" href="@Url.Action("NewsList", "Home", new { page = 1 })">« Första</a>
                        }
                        @if (Model.CurrentPage != 1)
                        {
                            <a class="page" href="@Url.Action("NewsList", "Home", new { page = Model.CurrentPage - 1 })">←</a>
                        }

                        @{
                            PaginationHelper.CalcutatePagerSize(Model.CurrentPage, Model.PageCount, out int pagerFirstPageNumber, out int pagerLastPageNumber);

                            for (int index = pagerFirstPageNumber; index <= pagerLastPageNumber; index++)
                            {
                                @if (index == Model.CurrentPage)
                                {
                                    <span class="page current">@index</span>
                                    continue;
                                }

                                <a class="page" href="@Url.Action("NewsList", "Home", new { page = index })">@index</a>
                            }
                        }

                        @if (Model.CurrentPage != Model.PageCount)
                        {
                            <a class="page" href="@Url.Action("NewsList", "Home", new { page = Model.CurrentPage + 1 })">→</a>

                        }
                        @if (Model.PageCount - Model.CurrentPage > 3)
                        {
                            <a class="page" href="@Url.Action("NewsList", "Home", new { page = Model.PageCount })">Sista »</a>
                        }
                    </div>
                </div>

                <div class="content-botom-hidden">
                    @await Component.InvokeAsync("SponsoredNews")
                    @await Component.InvokeAsync("LatestNews")
                </div>
            </div>
            <div class="col-4 content-right">
                @await Component.InvokeAsync("SponsoredNews")
                @await Component.InvokeAsync("MostReadNews")
                @await Component.InvokeAsync("LatestNews")
            </div>
        </div>
    </div>
    <div class="col-2 visible-lg index-side-banner-wrapper">
        <img src="~/assets/images/luxbright_skyscraper.jpg" width="200" height="400">
        <div class="stiky-side-banner">
            <img src="~/assets/images/ani_synas.gif" width="200" height="200">
        </div>
    </div>
</div>

@section Scripts{ }
